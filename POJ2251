#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int a,b,c;
int sx,sy,sz,ex,ey,ez;
struct point{
    int x,y,z;
};
queue<point> que,que0;
int d[32][32][32];
int _x[6] = {1,-1,0,0,0,0};
int _y[6] = {0,0,1,-1,0,0};
int _z[6] = {0,0,0,0,1,-1};
bool check(int x,int y,int z){
    if(x>=0&&y>=0&&z>=0&&x<a&&y<b&&z<c){
        return true;
    }
    else
        return false;
}
void fil(){
    que=que0;
    for(int ix = 0;ix<a;ix++){
            for( int iy = 0;iy<b;iy++){
                for(int iz = 0;iz<c;iz++){
                    char c;
                    cin>>c;
                    if(c=='S'){
                        sx=ix;
                        sy=iy;
                        sz=iz;
                        d[ix][iy][iz]=0;
                    }
                    else if(c=='E'){
                        ex=ix;
                        ey=iy;
                        ez=iz;
                        d[ix][iy][iz]=-1;
                    }
                    else if(c=='*'){
                        d[ix][iy][iz]=-2;
                    }
                    else if(c=='.'){
                        d[ix][iy][iz]=-1;
                    }

                }
            }
        }
    point p1;
    p1.x=sx;
    p1.y=sy;
    p1.z= sz;
    que.push(p1);
    while(!que.empty()){
        point p2 = que.front();
        que.pop();
        for(int i = 0;i<6;i++){
            point p3 = p2;
            p3.x = p2.x+_x[i];
            p3.y = p2.y+_y[i];
            p3.z = p2.z+_z[i];
            
            if(p3.x==ex&&p3.y==ey&&p3.z==ez){
                cout<<d[p2.x][p2.y][p2.z]+1<<"\n";
                return;
            }            
            if(check(p3.x,p3.y,p3.z)&&d[p3.x][p3.y][p3.z]==-1){
                d[p3.x][p3.y][p3.z]=d[p2.x][p2.y][p2.z]+1;
                que.push(p3);
            }
        }
    }



}
int main()
{
    while(cin>>a>>b>>c&&!(a==0&&b==0&&c==0)){
        fil();
    }
    return 0;
}
*******************************半成品
#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int a,b,c;
int sx,sy,sz,ex,ey,ez;
int flag = 1;
struct point{
    int x,y,z;
};
queue<point> que,que0;
int d[32][32][32];
int _x[6] = {1,-1,0,0,0,0};
int _y[6] = {0,0,1,-1,0,0};
int _z[6] = {0,0,0,0,1,-1};
bool check(int x,int y,int z){
    if(x>=0&&y>=0&&z>=0&&x<a&&y<b&&z<c){
        return true;
    }
    else
        return false;
}
void fil(){
    que=que0;
    for(int ix = 0;ix<a;ix++){
            for( int iy = 0;iy<b;iy++){
                for(int iz = 0;iz<c;iz++){
                    char c;
                    cin>>c;
                    if(c=='S'){
                        sx=ix;
                        sy=iy;
                        sz=iz;
                        d[ix][iy][iz]=0;
                    }
                    else if(c=='E'){
                        ex=ix;
                        ey=iy;
                        ez=iz;
                        d[ix][iy][iz]=-1;
                    }
                    else if(c=='*'){
                        d[ix][iy][iz]=-2;
                    }
                    else if(c=='.'){
                        d[ix][iy][iz]=-1;
                    }

                }
            }
        }
    point p1;
    p1.x=sx;
    p1.y=sy;
    p1.z= sz;
    que.push(p1);
    while(flag&&!que.empty()){
        point p2 = que.front();
        que.pop();
        for(int i = 0;i<6;i++){
            point p3 = p2;
            p3.x = p2.x+_x[i];
            p3.y = p2.y+_y[i];
            p3.z = p2.z+_z[i];
            if(p3.x==ex&&p3.y==ey&&p3.z==ez){
                d[p3.x][p3.y][p3.z]=d[p2.x][p2.y][p2.z]+1;
                flag  = 0;
                break;
            }
            if(check(p3.x,p3.y,p3.z)&&d[p3.x][p3.y][p3.z]==-1){
                d[p3.x][p3.y][p3.z]=d[p2.x][p2.y][p2.z]+1;
                que.push(p3);
            }
        }
    }
    if(d[ex][ey][ez]==-1){
        cout<<"Trapped!\n";
    }
    else if(d[ex][ey][ez]>=0){
        cout<<"Escaped in "<<d[ex][ey][ez]<<" minute(s).\n";
    }



}
int main()
{
    while(cin>>a>>b>>c&&!(a==0&&b==0&&c==0)){
        fil();
    }
    return 0;
}
*****************************wawawawa再改改
#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int a,b,c;
int sx,sy,sz,ex,ey,ez;
struct point{
    int x,y,z;
};
queue<point> que,que0;
int d[35][35][35];
int _x[6] = {1,-1,0,0,0,0};
int _y[6] = {0,0,1,-1,0,0};
int _z[6] = {0,0,0,0,1,-1};
bool check(int x,int y,int z){
    if(x>=0&&y>=0&&z>=0&&x<a&&y<b&&z<c){
        return true;
    }
    else
        return false;
}
void fil(){
    que=que0;
    for(int ix = 0;ix<a;ix++){
            for( int iy = 0;iy<b;iy++){
                for(int iz = 0;iz<c;iz++){
                    char c;
                    cin>>c;
                    if(c=='S'){
                        sx=ix;
                        sy=iy;
                        sz=iz;
                        d[ix][iy][iz]=0;
                    }
                    else if(c=='E'){
                        ex=ix;
                        ey=iy;
                        ez=iz;
                        d[ix][iy][iz]=-1;
                    }
                    else if(c=='*'){
                        d[ix][iy][iz]=-2;
                    }
                    else if(c=='.'){
                        d[ix][iy][iz]=-1;
                    }

                }
            }
        }
    point p1;
    p1.x=sx;
    p1.y=sy;
    p1.z= sz;
    que.push(p1);
    while(!que.empty()){
        point p2 = que.front();
        que.pop();
        for(int i = 0;i<6;i++){
            point p3 = p2;
            p3.x = p2.x+_x[i];
            p3.y = p2.y+_y[i];
            p3.z = p2.z+_z[i];
            if(check(p3.x,p3.y,p3.z)){
                if(p3.x==ex&&p3.y==ey&&p3.z==ez){
                    cout<<"Escaped in "<<d[p2.x][p2.y][p2.z]+1<<" minute(s).\n";
                    return;
                }
                if(d[p3.x][p3.y][p3.z]==-1){
                    d[p3.x][p3.y][p3.z]=d[p2.x][p2.y][p2.z]+1;
                    que.push(p3);
                }
            }

        }
    }
    if(d[ex][ey][ez]==-1){
        cout<<"Trapped!\n";
    }




}
int main()
{
    while(cin>>a>>b>>c&&!(a==0&&b==0&&c==0)){
        fil();
    }
    return 0;
}
//噗，数组开小了wa了。。
